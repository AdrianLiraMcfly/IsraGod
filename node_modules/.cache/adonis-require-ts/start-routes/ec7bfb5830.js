"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const Route_1 = __importDefault(global[Symbol.for('ioc.use')]("Adonis/Core/Route"));
Route_1.default.get('/', async () => {
    return { hello: 'world' };
});
Route_1.default.get('/users', 'UsersController.index');
Route_1.default.get('/posts', 'PostsController.index');
Route_1.default.get('/comments', 'CommentsController.index');
Route_1.default.any('/methods', 'MethodsController.index');
Route_1.default.group(() => {
    Route_1.default.get('/', 'UsersController.index');
    Route_1.default.get('/:id', 'UsersController.getUser');
    Route_1.default.post('/', 'UsersController.store');
    Route_1.default.put('/:id', 'UsersController.update');
    Route_1.default.delete('/:id', 'UsersController.destroy');
}).prefix('/users');
Route_1.default.group(() => {
    Route_1.default.get('/', 'PostsController.index');
    Route_1.default.get('/:id', 'PostsController.getPost');
    Route_1.default.post('/', 'PostsController.store');
    Route_1.default.put('/:id', 'PostsController.update');
    Route_1.default.delete('/:id', 'PostsController.destroy');
}).prefix('/posts');
Route_1.default.group(() => {
    Route_1.default.get('/', 'CommentsController.index');
    Route_1.default.get('/:id', 'CommentsController.getComment');
    Route_1.default.post('/', 'CommentsController.store');
    Route_1.default.put('/:id', 'CommentsController.update');
    Route_1.default.delete('/:id', 'CommentsController.destroy');
}).prefix('/comments');
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm91dGVzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsicm91dGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBb0JBLG9GQUEwQztBQUUxQyxlQUFLLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxLQUFLLElBQUksRUFBRTtJQUN4QixPQUFPLEVBQUUsS0FBSyxFQUFFLE9BQU8sRUFBRSxDQUFBO0FBQzNCLENBQUMsQ0FBQyxDQUFBO0FBRUYsZUFBSyxDQUFDLEdBQUcsQ0FBQyxRQUFRLEVBQUUsdUJBQXVCLENBQUMsQ0FBQTtBQUM1QyxlQUFLLENBQUMsR0FBRyxDQUFDLFFBQVEsRUFBRSx1QkFBdUIsQ0FBQyxDQUFBO0FBQzVDLGVBQUssQ0FBQyxHQUFHLENBQUMsV0FBVyxFQUFFLDBCQUEwQixDQUFDLENBQUE7QUFDbEQsZUFBSyxDQUFDLEdBQUcsQ0FBQyxVQUFVLEVBQUUseUJBQXlCLENBQUMsQ0FBQTtBQUVoRCxlQUFLLENBQUMsS0FBSyxDQUFDLEdBQUcsRUFBRTtJQUNmLGVBQUssQ0FBQyxHQUFHLENBQUMsR0FBRyxFQUFFLHVCQUF1QixDQUFDLENBQUE7SUFDdkMsZUFBSyxDQUFDLEdBQUcsQ0FBQyxNQUFNLEVBQUUseUJBQXlCLENBQUMsQ0FBQTtJQUM1QyxlQUFLLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSx1QkFBdUIsQ0FBQyxDQUFBO0lBQ3hDLGVBQUssQ0FBQyxHQUFHLENBQUMsTUFBTSxFQUFFLHdCQUF3QixDQUFDLENBQUE7SUFDM0MsZUFBSyxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUUseUJBQXlCLENBQUMsQ0FBQTtBQUNqRCxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLENBQUE7QUFFbkIsZUFBSyxDQUFDLEtBQUssQ0FBQyxHQUFHLEVBQUU7SUFDZixlQUFLLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSx1QkFBdUIsQ0FBQyxDQUFBO0lBQ3ZDLGVBQUssQ0FBQyxHQUFHLENBQUMsTUFBTSxFQUFFLHlCQUF5QixDQUFDLENBQUE7SUFDNUMsZUFBSyxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsdUJBQXVCLENBQUMsQ0FBQTtJQUN4QyxlQUFLLENBQUMsR0FBRyxDQUFDLE1BQU0sRUFBRSx3QkFBd0IsQ0FBQyxDQUFBO0lBQzNDLGVBQUssQ0FBQyxNQUFNLENBQUMsTUFBTSxFQUFFLHlCQUF5QixDQUFDLENBQUE7QUFDakQsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxDQUFBO0FBRW5CLGVBQUssQ0FBQyxLQUFLLENBQUMsR0FBRyxFQUFFO0lBQ2YsZUFBSyxDQUFDLEdBQUcsQ0FBQyxHQUFHLEVBQUUsMEJBQTBCLENBQUMsQ0FBQTtJQUMxQyxlQUFLLENBQUMsR0FBRyxDQUFDLE1BQU0sRUFBRSwrQkFBK0IsQ0FBQyxDQUFBO0lBQ2xELGVBQUssQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFLDBCQUEwQixDQUFDLENBQUE7SUFDM0MsZUFBSyxDQUFDLEdBQUcsQ0FBQyxNQUFNLEVBQUUsMkJBQTJCLENBQUMsQ0FBQTtJQUM5QyxlQUFLLENBQUMsTUFBTSxDQUFDLE1BQU0sRUFBRSw0QkFBNEIsQ0FBQyxDQUFBO0FBQ3BELENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxXQUFXLENBQUMsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbIi8qXHJcbnwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG58IFJvdXRlc1xyXG58LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxufFxyXG58IFRoaXMgZmlsZSBpcyBkZWRpY2F0ZWQgZm9yIGRlZmluaW5nIEhUVFAgcm91dGVzLiBBIHNpbmdsZSBmaWxlIGlzIGVub3VnaFxyXG58IGZvciBtYWpvcml0eSBvZiBwcm9qZWN0cywgaG93ZXZlciB5b3UgY2FuIGRlZmluZSByb3V0ZXMgaW4gZGlmZmVyZW50XHJcbnwgZmlsZXMgYW5kIGp1c3QgbWFrZSBzdXJlIHRvIGltcG9ydCB0aGVtIGluc2lkZSB0aGlzIGZpbGUuIEZvciBleGFtcGxlXHJcbnxcclxufCBEZWZpbmUgcm91dGVzIGluIGZvbGxvd2luZyB0d28gZmlsZXNcclxufCDilJzilIDilIAgc3RhcnQvcm91dGVzL2NhcnQudHNcclxufCDilJzilIDilIAgc3RhcnQvcm91dGVzL2N1c3RvbWVyLnRzXHJcbnxcclxufCBhbmQgdGhlbiBpbXBvcnQgdGhlbSBpbnNpZGUgYHN0YXJ0L3JvdXRlcy50c2AgYXMgZm9sbG93c1xyXG58XHJcbnwgaW1wb3J0ICcuL3JvdXRlcy9jYXJ0J1xyXG58IGltcG9ydCAnLi9yb3V0ZXMvY3VzdG9tZXInXHJcbnxcclxuKi9cclxuXHJcbmltcG9ydCBSb3V0ZSBmcm9tICdAaW9jOkFkb25pcy9Db3JlL1JvdXRlJ1xyXG5cclxuUm91dGUuZ2V0KCcvJywgYXN5bmMgKCkgPT4ge1xyXG4gIHJldHVybiB7IGhlbGxvOiAnd29ybGQnIH1cclxufSlcclxuXHJcblJvdXRlLmdldCgnL3VzZXJzJywgJ1VzZXJzQ29udHJvbGxlci5pbmRleCcpXHJcblJvdXRlLmdldCgnL3Bvc3RzJywgJ1Bvc3RzQ29udHJvbGxlci5pbmRleCcpXHJcblJvdXRlLmdldCgnL2NvbW1lbnRzJywgJ0NvbW1lbnRzQ29udHJvbGxlci5pbmRleCcpXHJcblJvdXRlLmFueSgnL21ldGhvZHMnLCAnTWV0aG9kc0NvbnRyb2xsZXIuaW5kZXgnKVxyXG5cclxuUm91dGUuZ3JvdXAoKCkgPT4ge1xyXG4gIFJvdXRlLmdldCgnLycsICdVc2Vyc0NvbnRyb2xsZXIuaW5kZXgnKVxyXG4gIFJvdXRlLmdldCgnLzppZCcsICdVc2Vyc0NvbnRyb2xsZXIuZ2V0VXNlcicpXHJcbiAgUm91dGUucG9zdCgnLycsICdVc2Vyc0NvbnRyb2xsZXIuc3RvcmUnKVxyXG4gIFJvdXRlLnB1dCgnLzppZCcsICdVc2Vyc0NvbnRyb2xsZXIudXBkYXRlJylcclxuICBSb3V0ZS5kZWxldGUoJy86aWQnLCAnVXNlcnNDb250cm9sbGVyLmRlc3Ryb3knKVxyXG59KS5wcmVmaXgoJy91c2VycycpXHJcblxyXG5Sb3V0ZS5ncm91cCgoKSA9PiB7XHJcbiAgUm91dGUuZ2V0KCcvJywgJ1Bvc3RzQ29udHJvbGxlci5pbmRleCcpXHJcbiAgUm91dGUuZ2V0KCcvOmlkJywgJ1Bvc3RzQ29udHJvbGxlci5nZXRQb3N0JylcclxuICBSb3V0ZS5wb3N0KCcvJywgJ1Bvc3RzQ29udHJvbGxlci5zdG9yZScpXHJcbiAgUm91dGUucHV0KCcvOmlkJywgJ1Bvc3RzQ29udHJvbGxlci51cGRhdGUnKVxyXG4gIFJvdXRlLmRlbGV0ZSgnLzppZCcsICdQb3N0c0NvbnRyb2xsZXIuZGVzdHJveScpXHJcbn0pLnByZWZpeCgnL3Bvc3RzJylcclxuXHJcblJvdXRlLmdyb3VwKCgpID0+IHtcclxuICBSb3V0ZS5nZXQoJy8nLCAnQ29tbWVudHNDb250cm9sbGVyLmluZGV4JylcclxuICBSb3V0ZS5nZXQoJy86aWQnLCAnQ29tbWVudHNDb250cm9sbGVyLmdldENvbW1lbnQnKVxyXG4gIFJvdXRlLnBvc3QoJy8nLCAnQ29tbWVudHNDb250cm9sbGVyLnN0b3JlJylcclxuICBSb3V0ZS5wdXQoJy86aWQnLCAnQ29tbWVudHNDb250cm9sbGVyLnVwZGF0ZScpXHJcbiAgUm91dGUuZGVsZXRlKCcvOmlkJywgJ0NvbW1lbnRzQ29udHJvbGxlci5kZXN0cm95JylcclxufSkucHJlZml4KCcvY29tbWVudHMnKSJdfQ==