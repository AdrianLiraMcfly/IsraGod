"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const User_1 = __importDefault(global[Symbol.for('ioc.use')]("App/Models/User"));
class UsersController {
    async index({ response }) {
        const users = await User_1.default.query();
        return response.status(200).json(users);
    }
    async getUser(ctx) {
        const user = await User_1.default.findOrFail(ctx.params.id);
        return user;
    }
    async store({ request, response }) {
        const user = await User_1.default.create(request.all());
        return response.status(201).json(user);
    }
    async update({ request, response }) {
        const user = await User_1.default.findOrFail(request.param('id'));
        user.merge(request.all());
        await user.save();
        return response.status(200).json(user);
    }
    async destroy({ request, response }) {
        const user = await User_1.default.findOrFail(request.param('id'));
        user.active = false;
        await user.save();
        return response.status(204);
    }
}
exports.default = UsersController;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVXNlcnNDb250cm9sbGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiVXNlcnNDb250cm9sbGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQ0EsaUZBQWtDO0FBQ2xDLE1BQXFCLGVBQWU7SUFDekIsS0FBSyxDQUFDLEtBQUssQ0FBQyxFQUFDLFFBQVEsRUFBc0I7UUFDOUMsTUFBTSxLQUFLLEdBQUcsTUFBTSxjQUFJLENBQUMsS0FBSyxFQUFFLENBQUE7UUFDaEMsT0FBTyxRQUFRLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQTtJQUMzQyxDQUFDO0lBRU0sS0FBSyxDQUFDLE9BQU8sQ0FBQyxHQUF3QjtRQUN6QyxNQUFNLElBQUksR0FBRyxNQUFNLGNBQUksQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsQ0FBQTtRQUNqRCxPQUFPLElBQUksQ0FBQTtJQUNmLENBQUM7SUFFTSxLQUFLLENBQUMsS0FBSyxDQUFDLEVBQUMsT0FBTyxFQUFFLFFBQVEsRUFBc0I7UUFDdkQsTUFBTSxJQUFJLEdBQUcsTUFBTSxjQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUUsQ0FBQyxDQUFBO1FBQzdDLE9BQU8sUUFBUSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUE7SUFDMUMsQ0FBQztJQUVNLEtBQUssQ0FBQyxNQUFNLENBQUMsRUFBQyxPQUFPLEVBQUUsUUFBUSxFQUFzQjtRQUN4RCxNQUFNLElBQUksR0FBRyxNQUFNLGNBQUksQ0FBQyxVQUFVLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFBO1FBQ3ZELElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxDQUFDLENBQUE7UUFDekIsTUFBTSxJQUFJLENBQUMsSUFBSSxFQUFFLENBQUE7UUFDakIsT0FBTyxRQUFRLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQTtJQUMxQyxDQUFDO0lBRU0sS0FBSyxDQUFDLE9BQU8sQ0FBQyxFQUFDLE9BQU8sRUFBRSxRQUFRLEVBQXNCO1FBQ3pELE1BQU0sSUFBSSxHQUFHLE1BQU0sY0FBSSxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUE7UUFDdkQsSUFBSSxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUE7UUFDbkIsTUFBTSxJQUFJLENBQUMsSUFBSSxFQUFFLENBQUE7UUFDakIsT0FBTyxRQUFRLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFBO0lBQy9CLENBQUM7Q0FDSjtBQTdCRCxrQ0E2QkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHlwZSB7IEh0dHBDb250ZXh0Q29udHJhY3QgfSBmcm9tICdAaW9jOkFkb25pcy9Db3JlL0h0dHBDb250ZXh0J1xyXG5pbXBvcnQgVXNlciBmcm9tICdBcHAvTW9kZWxzL1VzZXInXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFVzZXJzQ29udHJvbGxlciB7XHJcbiAgICBwdWJsaWMgYXN5bmMgaW5kZXgoe3Jlc3BvbnNlfTogSHR0cENvbnRleHRDb250cmFjdCkge1xyXG4gICAgICAgIGNvbnN0IHVzZXJzID0gYXdhaXQgVXNlci5xdWVyeSgpXHJcbiAgICAgICAgcmV0dXJuIHJlc3BvbnNlLnN0YXR1cygyMDApLmpzb24odXNlcnMpXHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGFzeW5jIGdldFVzZXIoY3R4OiBIdHRwQ29udGV4dENvbnRyYWN0KSB7XHJcbiAgICAgICAgY29uc3QgdXNlciA9IGF3YWl0IFVzZXIuZmluZE9yRmFpbChjdHgucGFyYW1zLmlkKVxyXG4gICAgICAgIHJldHVybiB1c2VyXHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGFzeW5jIHN0b3JlKHtyZXF1ZXN0LCByZXNwb25zZX06IEh0dHBDb250ZXh0Q29udHJhY3QpIHtcclxuICAgICAgICBjb25zdCB1c2VyID0gYXdhaXQgVXNlci5jcmVhdGUocmVxdWVzdC5hbGwoKSlcclxuICAgICAgICByZXR1cm4gcmVzcG9uc2Uuc3RhdHVzKDIwMSkuanNvbih1c2VyKVxyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBhc3luYyB1cGRhdGUoe3JlcXVlc3QsIHJlc3BvbnNlfTogSHR0cENvbnRleHRDb250cmFjdCkge1xyXG4gICAgICAgIGNvbnN0IHVzZXIgPSBhd2FpdCBVc2VyLmZpbmRPckZhaWwocmVxdWVzdC5wYXJhbSgnaWQnKSlcclxuICAgICAgICB1c2VyLm1lcmdlKHJlcXVlc3QuYWxsKCkpXHJcbiAgICAgICAgYXdhaXQgdXNlci5zYXZlKClcclxuICAgICAgICByZXR1cm4gcmVzcG9uc2Uuc3RhdHVzKDIwMCkuanNvbih1c2VyKVxyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBhc3luYyBkZXN0cm95KHtyZXF1ZXN0LCByZXNwb25zZX06IEh0dHBDb250ZXh0Q29udHJhY3QpIHtcclxuICAgICAgICBjb25zdCB1c2VyID0gYXdhaXQgVXNlci5maW5kT3JGYWlsKHJlcXVlc3QucGFyYW0oJ2lkJykpXHJcbiAgICAgICAgdXNlci5hY3RpdmUgPSBmYWxzZVxyXG4gICAgICAgIGF3YWl0IHVzZXIuc2F2ZSgpXHJcbiAgICAgICAgcmV0dXJuIHJlc3BvbnNlLnN0YXR1cygyMDQpXHJcbiAgICB9XHJcbn0iXX0=