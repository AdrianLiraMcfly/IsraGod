"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.configureSuite = exports.runnerHooks = exports.reporters = exports.plugins = void 0;
const TestUtils_1 = __importDefault(global[Symbol.for('ioc.use')]("Adonis/Core/TestUtils"));
const preset_adonis_1 = require("@japa/preset-adonis");
exports.plugins = [(0, preset_adonis_1.assert)(), (0, preset_adonis_1.runFailedTests)(), (0, preset_adonis_1.apiClient)()];
exports.reporters = [(0, preset_adonis_1.specReporter)()];
exports.runnerHooks = {
    setup: [() => TestUtils_1.default.ace().loadCommands()],
    teardown: [],
};
const configureSuite = (suite) => {
    if (suite.name === 'functional') {
        suite.setup(() => TestUtils_1.default.httpServer().start());
    }
};
exports.configureSuite = configureSuite;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYm9vdHN0cmFwLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiYm9vdHN0cmFwLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQVFBLDRGQUFrRDtBQUNsRCx1REFBcUY7QUFheEUsUUFBQSxPQUFPLEdBQWdDLENBQUMsSUFBQSxzQkFBTSxHQUFFLEVBQUUsSUFBQSw4QkFBYyxHQUFFLEVBQUUsSUFBQSx5QkFBUyxHQUFFLENBQUMsQ0FBQTtBQVloRixRQUFBLFNBQVMsR0FBa0MsQ0FBQyxJQUFBLDRCQUFZLEdBQUUsQ0FBQyxDQUFBO0FBYzNELFFBQUEsV0FBVyxHQUFpRDtJQUN2RSxLQUFLLEVBQUUsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxtQkFBUyxDQUFDLEdBQUcsRUFBRSxDQUFDLFlBQVksRUFBRSxDQUFDO0lBQzdDLFFBQVEsRUFBRSxFQUFFO0NBQ2IsQ0FBQTtBQWFNLE1BQU0sY0FBYyxHQUF1QyxDQUFDLEtBQUssRUFBRSxFQUFFO0lBQzFFLElBQUksS0FBSyxDQUFDLElBQUksS0FBSyxZQUFZLEVBQUU7UUFDL0IsS0FBSyxDQUFDLEtBQUssQ0FBQyxHQUFHLEVBQUUsQ0FBQyxtQkFBUyxDQUFDLFVBQVUsRUFBRSxDQUFDLEtBQUssRUFBRSxDQUFDLENBQUE7S0FDbEQ7QUFDSCxDQUFDLENBQUE7QUFKWSxRQUFBLGNBQWMsa0JBSTFCIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIEZpbGUgc291cmNlOiBodHRwczovL2JpdC5seS8zdWthSFR6XHJcbiAqXHJcbiAqIEZlZWwgZnJlZSB0byBsZXQgdXMga25vdyB2aWEgUFIsIGlmIHlvdSBmaW5kIHNvbWV0aGluZyBicm9rZW4gaW4gdGhpcyBjb250cmFjdFxyXG4gKiBmaWxlLlxyXG4gKi9cclxuXHJcbmltcG9ydCB0eXBlIHsgQ29uZmlnIH0gZnJvbSAnQGphcGEvcnVubmVyJ1xyXG5pbXBvcnQgVGVzdFV0aWxzIGZyb20gJ0Bpb2M6QWRvbmlzL0NvcmUvVGVzdFV0aWxzJ1xyXG5pbXBvcnQgeyBhc3NlcnQsIHJ1bkZhaWxlZFRlc3RzLCBzcGVjUmVwb3J0ZXIsIGFwaUNsaWVudCB9IGZyb20gJ0BqYXBhL3ByZXNldC1hZG9uaXMnXHJcblxyXG4vKlxyXG58LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxufCBKYXBhIFBsdWdpbnNcclxufC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbnxcclxufCBKYXBhIHBsdWdpbnMgYWxsb3dzIHlvdSB0byBhZGQgYWRkaXRpb25hbCBmZWF0dXJlcyB0byBKYXBhLiBCeSBkZWZhdWx0XHJcbnwgd2UgcmVnaXN0ZXIgdGhlIGFzc2VydGlvbiBwbHVnaW4uXHJcbnxcclxufCBGZWVsIGZyZWUgdG8gcmVtb3ZlIGV4aXN0aW5nIHBsdWdpbnMgb3IgYWRkIG1vcmUuXHJcbnxcclxuKi9cclxuZXhwb3J0IGNvbnN0IHBsdWdpbnM6IFJlcXVpcmVkPENvbmZpZz5bJ3BsdWdpbnMnXSA9IFthc3NlcnQoKSwgcnVuRmFpbGVkVGVzdHMoKSwgYXBpQ2xpZW50KCldXHJcblxyXG4vKlxyXG58LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxufCBKYXBhIFJlcG9ydGVyc1xyXG58LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxufFxyXG58IEphcGEgcmVwb3J0ZXJzIGRpc3BsYXlzL3NhdmVzIHRoZSBwcm9ncmVzcyBvZiB0ZXN0cyBhcyB0aGV5IGFyZSBleGVjdXRlZC5cclxufCBCeSBkZWZhdWx0LCB3ZSByZWdpc3RlciB0aGUgc3BlYyByZXBvcnRlciB0byBzaG93IGEgZGV0YWlsZWQgcmVwb3J0XHJcbnwgb2YgdGVzdHMgb24gdGhlIHRlcm1pbmFsLlxyXG58XHJcbiovXHJcbmV4cG9ydCBjb25zdCByZXBvcnRlcnM6IFJlcXVpcmVkPENvbmZpZz5bJ3JlcG9ydGVycyddID0gW3NwZWNSZXBvcnRlcigpXVxyXG5cclxuLypcclxufC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbnwgUnVubmVyIGhvb2tzXHJcbnwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG58XHJcbnwgUnVubmVyIGhvb2tzIGFyZSBleGVjdXRlZCBhZnRlciBib290aW5nIHRoZSBBZG9uaXNKUyBhcHAgYW5kXHJcbnwgYmVmb3JlIHRoZSB0ZXN0IGZpbGVzIGFyZSBpbXBvcnRlZC5cclxufFxyXG58IFlvdSBjYW4gcGVyZm9ybSBhY3Rpb25zIGxpa2Ugc3RhcnRpbmcgdGhlIEhUVFAgc2VydmVyIG9yIHJ1bm5pbmcgbWlncmF0aW9uc1xyXG58IHdpdGhpbiB0aGUgcnVubmVyIGhvb2tzXHJcbnxcclxuKi9cclxuZXhwb3J0IGNvbnN0IHJ1bm5lckhvb2tzOiBQaWNrPFJlcXVpcmVkPENvbmZpZz4sICdzZXR1cCcgfCAndGVhcmRvd24nPiA9IHtcclxuICBzZXR1cDogWygpID0+IFRlc3RVdGlscy5hY2UoKS5sb2FkQ29tbWFuZHMoKV0sXHJcbiAgdGVhcmRvd246IFtdLFxyXG59XHJcblxyXG4vKlxyXG58LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxufCBDb25maWd1cmUgaW5kaXZpZHVhbCBzdWl0ZXNcclxufC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbnxcclxufCBUaGUgY29uZmlndXJlU3VpdGUgbWV0aG9kIGdldHMgY2FsbGVkIGZvciBldmVyeSB0ZXN0IHN1aXRlIHJlZ2lzdGVyZWRcclxufCB3aXRoaW4gXCIuYWRvbmlzcmMuanNvblwiIGZpbGUuXHJcbnxcclxufCBZb3UgY2FuIHVzZSB0aGlzIG1ldGhvZCB0byBjb25maWd1cmUgc3VpdGVzLiBGb3IgZXhhbXBsZTogT25seSBzdGFydFxyXG58IHRoZSBIVFRQIHNlcnZlciB3aGVuIGl0IGlzIGEgZnVuY3Rpb25hbCBzdWl0ZS5cclxuKi9cclxuZXhwb3J0IGNvbnN0IGNvbmZpZ3VyZVN1aXRlOiBSZXF1aXJlZDxDb25maWc+Wydjb25maWd1cmVTdWl0ZSddID0gKHN1aXRlKSA9PiB7XHJcbiAgaWYgKHN1aXRlLm5hbWUgPT09ICdmdW5jdGlvbmFsJykge1xyXG4gICAgc3VpdGUuc2V0dXAoKCkgPT4gVGVzdFV0aWxzLmh0dHBTZXJ2ZXIoKS5zdGFydCgpKVxyXG4gIH1cclxufVxyXG4iXX0=